{"ast":null,"code":"import { useState } from \"react\";\nimport uuid from \"uuid\";\nimport axios from \"axios\"; // const useAxios = (url) => {\n//   const [dataList, setDataList] = useState([]);\n//   const addData = async () => {\n//     const resp = await axios.get(`${url}`);\n//     setDataList([...dataList, { ...resp.data, id: uuid() }]);\n//   };\n//   return [dataList, addData];\n// };\n// export default useAxios;\n\nfunction useAxios(keyInLS, baseUrl) {\n  const [responses, setResponses] = useLocalStorage(keyInLS);\n\n  const addResponseData = async (formatter = data => data, restOfUrl = \"\") => {\n    const response = await axios.get(`${baseUrl}${restOfUrl}`);\n    setResponses(data => [...data, formatter(response.data)]);\n  };\n\n  const clearResponses = () => setResponses([]);\n\n  return [responses, addResponseData, clearResponses];\n}\n\nexport default {\n  useAxios\n};","map":{"version":3,"sources":["/Users/gabriela/2021/Coding/SB/Exercises/react-cards-pokemon/src/hooks/useAxios.js"],"names":["useState","uuid","axios","useAxios","keyInLS","baseUrl","responses","setResponses","useLocalStorage","addResponseData","formatter","data","restOfUrl","response","get","clearResponses"],"mappings":"AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,OAAOC,KAAP,MAAkB,OAAlB,C,CAEA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAEA;;AAEA,SAASC,QAAT,CAAkBC,OAAlB,EAA2BC,OAA3B,EAAoC;AAChC,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BC,eAAe,CAACJ,OAAD,CAAjD;;AAEA,QAAMK,eAAe,GAAG,OAAOC,SAAS,GAAGC,IAAI,IAAIA,IAA3B,EAAiCC,SAAS,GAAG,EAA7C,KAAoD;AAC1E,UAAMC,QAAQ,GAAG,MAAMX,KAAK,CAACY,GAAN,CAAW,GAAET,OAAQ,GAAEO,SAAU,EAAjC,CAAvB;AACAL,IAAAA,YAAY,CAACI,IAAI,IAAI,CAAC,GAAGA,IAAJ,EAAUD,SAAS,CAACG,QAAQ,CAACF,IAAV,CAAnB,CAAT,CAAZ;AACD,GAHD;;AAKA,QAAMI,cAAc,GAAG,MAAMR,YAAY,CAAC,EAAD,CAAzC;;AAEA,SAAO,CAACD,SAAD,EAAYG,eAAZ,EAA6BM,cAA7B,CAAP;AACD;;AAED,eAAe;AAAGZ,EAAAA;AAAH,CAAf","sourcesContent":["import { useState } from \"react\";\nimport uuid from \"uuid\";\nimport axios from \"axios\";\n\n// const useAxios = (url) => {\n//   const [dataList, setDataList] = useState([]);\n\n//   const addData = async () => {\n//     const resp = await axios.get(`${url}`);\n//     setDataList([...dataList, { ...resp.data, id: uuid() }]);\n//   };\n\n//   return [dataList, addData];\n// };\n\n// export default useAxios;\n\nfunction useAxios(keyInLS, baseUrl) {\n    const [responses, setResponses] = useLocalStorage(keyInLS);\n  \n    const addResponseData = async (formatter = data => data, restOfUrl = \"\") => {\n      const response = await axios.get(`${baseUrl}${restOfUrl}`);\n      setResponses(data => [...data, formatter(response.data)]);\n    };\n  \n    const clearResponses = () => setResponses([]);\n  \n    return [responses, addResponseData, clearResponses];\n  }\n\n  export default {  useAxios };"]},"metadata":{},"sourceType":"module"}